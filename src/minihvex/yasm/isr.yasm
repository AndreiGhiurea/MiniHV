%include "lib.yasm"

extern RestoreRegisters

%macro call_handler 2
    save_proc_state

    ; 4th argument - pointer to processor state
    mov             r9, rsp
    ; 3rd argument - BOOLEAN, error code available
    mov             r8, QWORD %2

    ; 2nd argument - pointer to interrupt stack
    lea             rdx, [rsp + COMPLETE_PROCESSOR_STATE_size]

    ; 1st argument - interrupt index
    mov             rcx, QWORD %1

    call_func_64    InterruptHandler, rcx, rdx, r8, r9

    mov             rcx, rsp
    call            RestoreRegisters

    ; restore stack
    add             rsp, COMPLETE_PROCESSOR_STATE_size

    iretq
%endmacro

extern InterruptHandler

global DivideError
global DebugException
global NMIInterrupt
global BreakpointException
global OverflowException
global BoundRangeExceededException
global InvalidOpcode
global DeviceNotAvailable
global DoubleFault
global CoprocessorSegmentOverrun
global InvalidTSS
global SegmentNotPresent
global StackFault
global GeneralProtection
global PageFault
global FloatingPointX87Error
global AlignmentCheck
global MachineCheck
global FloatingPointSIMD
global VirtualizationException

global SpuriousInterrupt


; Interrupt 0 - Divide Error Exception (#DE)
align 0x10, db 0
[bits 64]
DivideError:
    call_handler    0, 0

; Interrupt 1 - Debug Exception (#DB)
align 0x10, db 0
[bits 64]
DebugException:
    call_handler    1, 0

; Interrupt 2 - NMI Interrupt
align 0x10, db 0
[bits 64]
NMIInterrupt:
    call_handler    2, 0

; Interrupt 3 - Breakpoint Exception (#BP)
align 0x10, db 0
[bits 64]
BreakpointException:
    call_handler    3, 0

; Interrupt 4 - Overflow Exception (#OF)
align 0x10, db 0
[bits 64]
OverflowException:
    call_handler    4, 0

; Interrupt 5 - BOUND Range Exceeded Exception (#BR)
align 0x10, db 0
[bits 64]
BoundRangeExceededException:
    call_handler    5, 0

; Interrupt 6 - Invalid Opcode Exception (#UD)
align 0x10, db 0
[bits 64]
InvalidOpcode:
    call_handler    6, 0

; Interrupt 7 - Device Not Available Exception (#NM)
align 0x10, db 0
[bits 64]
DeviceNotAvailable:
    call_handler    7, 0

; Interrupt 8 - Double Fault Exception (#DF)
align 0x10, db 0
[bits 64]
DoubleFault:
    call_handler    8, 1

; Interrupt 9 - Coprocessor Segment Overrun
align 0x10, db 0
[bits 64]
CoprocessorSegmentOverrun:
    call_handler    9, 0

; Interrupt 10 - Invalid TSS Exception (#TS)
align 0x10, db 0
[bits 64]
InvalidTSS:
    call_handler    10, 1

; Interrupt 11 - Segment Not Present (#NP)
align 0x10, db 0
[bits 64]
SegmentNotPresent:
    call_handler    11, 1

; Interrupt 12 - Stack Fault (#SS)
align 0x10, db 0
[bits 64]
StackFault:
    call_handler    12, 1

; Interrupt 13 - General Protection Exception (#GP)
align 0x10, db 0
[bits 64]
GeneralProtection:
    call_handler    13, 1

; Interrupt 14 - Page Fault Exception (#PF)
align 0x10, db 0
[bits 64]
PageFault:
    call_handler    14, 1

; Interrupt 16 - x87 FPU Floating-Point Error (#MF)
align 0x10, db 0
[bits 64]
FloatingPointX87Error:
    call_handler    16, 0

; Interrupt 17 - Alignment Check Exception (#AC)
align 0x10, db 0
[bits 64]
AlignmentCheck:
    call_handler    17, 1

; Interrupt 18 - Machine-Check Exception (#MC)
align 0x10, db 0
[bits 64]
MachineCheck:
    call_handler    18, 0

; Interrupt 19 - SIMD Floating-Point Exception (#XM)
align 0x10, db 0
[bits 64]
FloatingPointSIMD:
    call_handler    19, 0

; Interrupt 20 - Virtualization Exception (#VE)
align 0x10, db 0
[bits 64]
VirtualizationException:
    call_handler    20, 0

; Interrupt 39 - Spurious Interrupt
align 0x10, db 0
[bits 64]
SpuriousInterrupt:
    iretq